// Code generated by mockery v2.23.2. DO NOT EDIT.

package mocks

import (
	log "github.com/aws/amazon-ssm-agent/agent/log"
	mock "github.com/stretchr/testify/mock"

	rebooter "github.com/aws/amazon-ssm-agent/agent/rebooter"
)

// IRebootType is an autogenerated mock type for the IRebootType type
type IRebootType struct {
	mock.Mock
}

// GetChannel provides a mock function with given fields:
func (_m *IRebootType) GetChannel() chan rebooter.RebootType {
	ret := _m.Called()

	var r0 chan rebooter.RebootType
	if rf, ok := ret.Get(0).(func() chan rebooter.RebootType); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan rebooter.RebootType)
		}
	}

	return r0
}

// RebootMachine provides a mock function with given fields: _a0
func (_m *IRebootType) RebootMachine(_a0 log.T) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(log.T) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIRebootType interface {
	mock.TestingT
	Cleanup(func())
}

// NewIRebootType creates a new instance of IRebootType. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRebootType(t mockConstructorTestingTNewIRebootType) *IRebootType {
	mock := &IRebootType{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
